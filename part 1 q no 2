#include <iostream>
#include <vector>
#include <algorithm>  // Add this line for remove_if
#include <chrono>

using namespace std;

// Product structure representing a product in the inventory
struct Product {
    int id;
    string name;
    double price;
    int quantity;
};

// Inventory class to manage products
class Inventory {
private:
    vector<Product> products;

public:
    // Function to add a new product to the inventory
    void addProduct(int id, const string& name, double price, int quantity) {
        products.push_back({ id, name, price, quantity });
    }

    // Function to remove a product from the inventory based on its ID
    void removeProduct(int id) {
        auto it = remove_if(products.begin(), products.end(),
            [id](const Product& p) { return p.id == id; });

        products.erase(it, products.end());
    }
};

int main() {
    // Create an instance of the Inventory
    Inventory inventory;

    // Start the clock
    auto startTime = chrono::high_resolution_clock::now();

    // Adding new products to the inventory
    inventory.addProduct(1, "ProductA", 10.99, 50);
    inventory.addProduct(2, "ProductB", 20.50, 30);

    // Removing a product from the inventory
    inventory.removeProduct(1);

    // Stop the clock
    auto endTime = chrono::high_resolution_clock::now();

    auto duration = chrono::duration_cast<chrono::microseconds>(endTime - startTime);

    cout << "Execution Time: " << duration.count() << " microseconds\n";

    return 0;
}
